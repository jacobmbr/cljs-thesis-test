;; Analyzed by ClojureScript 1.8.51
{:use-macros {log chromex.logging, go cljs.core.async.macros, group chromex.logging, get-url chromex.ext.extension, go-loop cljs.core.async.macros, warn chromex.logging, group-end chromex.logging, info chromex.logging, error chromex.logging}, :excludes #{}, :name thesis.background.storage, :imports {Uri goog.Uri}, :requires {idx cljs-idxdb.core, Uri goog.Uri, ajax.core ajax.core, location thesis.background.location, chromex.logging chromex.logging, cljs.core.async cljs.core.async, clojure.set clojure.set, cljs-idxdb.core cljs-idxdb.core, thesis.background.location thesis.background.location, chromex.ext.extension chromex.ext.extension, clojure.string clojure.string}, :uses {<! cljs.core.async, join clojure.string, chan cljs.core.async, sub cljs.core.async, subset? clojure.set, split-lines clojure.string, >! cljs.core.async, GET ajax.core, split clojure.string, put! cljs.core.async}, :defs {get-domain-count {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 88, :column 7, :end-line 88, :end-column 23, :arglists (quote ([domain cb]))}, :name thesis.background.storage/get-domain-count, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 23, :method-params ([domain cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([domain cb]))}, store-name {:name thesis.background.storage/store-name, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 32, :column 1, :end-line 32, :end-column 16, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 32, :column 6, :end-line 32, :end-column 16}}, dexie {:name thesis.background.storage/dexie, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 15, :column 1, :end-line 15, :end-column 11, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 15, :column 6, :end-line 15, :end-column 11}}, location {:name thesis.background.storage/location, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 30, :column 1, :end-line 30, :end-column 14, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 30, :column 6, :end-line 30, :end-column 14}}, process-request! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 74, :column 7, :end-line 74, :end-column 23, :arglists (quote ([r loc tabUrl]))}, :name thesis.background.storage/process-request!, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 23, :method-params ([r loc tabUrl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 3, :fn-var true, :arglists (quote ([r loc tabUrl]))}, get-distinct-domains {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 160, :column 7, :end-line 160, :end-column 27, :arglists (quote ([res-chan]))}, :name thesis.background.storage/get-distinct-domains, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 27, :method-params ([res-chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res-chan]))}, get-distinct-locations {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 155, :column 7, :end-line 155, :end-column 29, :arglists (quote ([res-chan]))}, :name thesis.background.storage/get-distinct-locations, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 29, :method-params ([res-chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res-chan]))}, get-tabdict {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 27, :column 7, :end-line 27, :end-column 18, :arglists (quote ([id]))}, :name thesis.background.storage/get-tabdict, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 18, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, get-site-info {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 165, :column 7, :end-line 165, :end-column 20, :arglists (quote ([res-chan domain]))}, :name thesis.background.storage/get-site-info, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 20, :method-params ([res-chan domain]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 2, :fn-var true, :arglists (quote ([res-chan domain]))}, get-all-for-index {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 91, :column 7, :end-line 91, :end-column 24, :arglists (quote ([res-chan idx value]))}, :name thesis.background.storage/get-all-for-index, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 24, :method-params ([res-chan idx value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 3, :fn-var true, :arglists (quote ([res-chan idx value]))}, get-location-counts {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 143, :column 7, :end-line 143, :end-column 26, :arglists (quote ([res-chan]))}, :name thesis.background.storage/get-location-counts, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 26, :method-params ([res-chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res-chan]))}, get-all-for-domain {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 102, :column 7, :end-line 102, :end-column 25, :arglists (quote ([res-chan domain typ]))}, :name thesis.background.storage/get-all-for-domain, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 25, :method-params ([res-chan domain typ]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 3, :fn-var true, :arglists (quote ([res-chan domain typ]))}, get-distinct-index {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 114, :column 7, :end-line 114, :end-column 25, :arglists (quote ([idx kw callback]))}, :name thesis.background.storage/get-distinct-index, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 25, :method-params ([idx kw callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 3, :fn-var true, :arglists (quote ([idx kw callback]))}, db {:name thesis.background.storage/db, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 14, :column 1, :end-line 14, :end-column 8, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 14, :column 6, :end-line 14, :end-column 8}}, tabdict-remove-client {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 20, :column 7, :end-line 20, :end-column 28, :arglists (quote ([client]))}, :name thesis.background.storage/tabdict-remove-client, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 28, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client]))}, store-request! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 54, :column 7, :end-line 54, :end-column 21, :arglists (quote ([r domain loc tabUrl]))}, :name thesis.background.storage/store-request!, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 21, :method-params ([r domain loc tabUrl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 4, :fn-var true, :arglists (quote ([r domain loc tabUrl]))}, get-domain {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 46, :column 7, :end-line 46, :end-column 17, :arglists (quote ([host]))}, :name thesis.background.storage/get-domain, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 17, :method-params ([host]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([host]))}, setup-storage! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 34, :column 7, :end-line 34, :end-column 21, :arglists (quote ([]))}, :name thesis.background.storage/setup-storage!, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, get-and-store-psl! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 68, :column 7, :end-line 68, :end-column 25, :arglists (quote ([]))}, :name thesis.background.storage/get-and-store-psl!, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, psldb {:name thesis.background.storage/psldb, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 16, :column 1, :end-line 16, :end-column 11, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 16, :column 6, :end-line 16, :end-column 11}}, tabdict-add-client {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 24, :column 7, :end-line 24, :end-column 25, :arglists (quote ([client]))}, :name thesis.background.storage/tabdict-add-client, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 25, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client]))}, null {:name thesis.background.storage/null, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 18, :column 1, :end-line 18, :end-column 14, :declared true, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 18, :column 10, :end-line 18, :end-column 14, :declared true}}, tabdict {:name thesis.background.storage/tabdict, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 17, :column 1, :end-line 17, :end-column 13, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 17, :column 6, :end-line 17, :end-column 13}}, get-distinct-index-with-counts {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :line 127, :column 7, :end-line 127, :end-column 37, :arglists (quote ([idx kw callback]))}, :name thesis.background.storage/get-distinct-index-with-counts, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/storage.cljs", :end-column 37, :method-params ([idx kw callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 3, :fn-var true, :arglists (quote ([idx kw callback]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, chromex.logging chromex.logging, chromex.ext.extension chromex.ext.extension}, :cljs.analyzer/constants {:seen #{:unique :value :type :hostname :count :restype :domain :tabUrl :timestamp :typ :location :handler :keyPath :data}, :order [:keyPath :unique :hostname :domain :tabUrl :location :timestamp :handler :type :count :restype :value :data :typ]}, :doc nil}