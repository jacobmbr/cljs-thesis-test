;; Analyzed by ClojureScript 1.8.51
{:use-macros {log chromex.logging, html hiccups.core, go cljs.core.async.macros, go-loop cljs.core.async.macros, connect chromex.ext.runtime}, :excludes #{}, :name thesis.content-script.core, :imports nil, :requires {chromex.ext.runtime chromex.ext.runtime, draw thesis.content-script.draw, chromex.protocols chromex.protocols, thesis.content-script.indicator thesis.content-script.indicator, thesis.content-script.canvas thesis.content-script.canvas, chromex.logging chromex.logging, cljs.core.async cljs.core.async, thesis.content-script.handlers thesis.content-script.handlers, tc thesis.content-script.canvas, thesis.content-script.draw thesis.content-script.draw, devtools devtools.core, gui thesis.content-script.gui, thesis.dev thesis.dev, devtools.core devtools.core, runtime chromex.ext.runtime, indicator thesis.content-script.indicator, thesis.content-script.gui thesis.content-script.gui, re-frame.core re-frame.core}, :uses {<! cljs.core.async, close! cljs.core.async, path re-frame.core, chan cljs.core.async, draw-text thesis.content-script.draw, debug re-frame.core, trim-v re-frame.core, >! cljs.core.async, dispatch re-frame.core, after re-frame.core, post-message! chromex.protocols, draw-entity thesis.content-script.draw, put! cljs.core.async, register-handler re-frame.core}, :defs {background-chan {:name thesis.content-script.core/background-chan, :file "src/content_script/thesis/content_script/core.cljs", :line 18, :column 1, :end-line 18, :end-column 21, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/content_script/thesis/content_script/core.cljs", :line 18, :column 6, :end-line 18, :end-column 21}}, count-chan {:name thesis.content-script.core/count-chan, :file "src/content_script/thesis/content_script/core.cljs", :line 19, :column 1, :end-line 19, :end-column 16, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/content_script/thesis/content_script/core.cljs", :line 19, :column 6, :end-line 19, :end-column 16}}, counts {:name thesis.content-script.core/counts, :file "src/content_script/thesis/content_script/core.cljs", :line 20, :column 1, :end-line 20, :end-column 12, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/content_script/thesis/content_script/core.cljs", :line 20, :column 6, :end-line 20, :end-column 12}}, run-gui-loop! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/content_script/thesis/content_script/core.cljs", :line 22, :column 7, :end-line 22, :end-column 20, :arglists (quote ([msg-chan]))}, :name thesis.content-script.core/run-gui-loop!, :variadic false, :file "src/content_script/thesis/content_script/core.cljs", :end-column 20, :method-params ([msg-chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-chan]))}, process-message! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/content_script/thesis/content_script/core.cljs", :line 29, :column 7, :end-line 29, :end-column 23, :arglists (quote ([msg]))}, :name thesis.content-script.core/process-message!, :variadic false, :file "src/content_script/thesis/content_script/core.cljs", :end-column 23, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, run-message-loop! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/content_script/thesis/content_script/core.cljs", :line 46, :column 7, :end-line 46, :end-column 24, :arglists (quote ([message-channel]))}, :name thesis.content-script.core/run-message-loop!, :variadic false, :file "src/content_script/thesis/content_script/core.cljs", :end-column 24, :method-params ([message-channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message-channel]))}, run-indicator-message-loop! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/content_script/thesis/content_script/core.cljs", :line 54, :column 7, :end-line 54, :end-column 34, :arglists (quote ([ind-chan]))}, :name thesis.content-script.core/run-indicator-message-loop!, :variadic false, :file "src/content_script/thesis/content_script/core.cljs", :end-column 34, :method-params ([ind-chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ind-chan]))}, connect-to-background-page! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/content_script/thesis/content_script/core.cljs", :line 62, :column 7, :end-line 62, :end-column 34, :arglists (quote ([]))}, :name thesis.content-script.core/connect-to-background-page!, :variadic false, :file "src/content_script/thesis/content_script/core.cljs", :end-column 34, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/content_script/thesis/content_script/core.cljs", :line 70, :column 7, :end-line 70, :end-column 12, :arglists (quote ([]))}, :name thesis.content-script.core/init!, :variadic false, :file "src/content_script/thesis/content_script/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, hiccups hiccups.core, hiccups.core hiccups.core, chromex.logging chromex.logging, runtime chromex.ext.runtime, chromex.ext.runtime chromex.ext.runtime}, :cljs.analyzer/constants {:seen #{:else :recur :reqtype :omit :update-domain-info}, :order [:recur :reqtype :else :update-domain-info :omit]}, :doc nil}