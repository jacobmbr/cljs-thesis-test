;; Analyzed by ClojureScript 1.8.51
{:use-macros {log chromex.logging, go cljs.core.async.macros, oget chromex.support, group chromex.logging, go-loop cljs.core.async.macros, warn chromex.logging, group-end chromex.logging, info chromex.logging, error chromex.logging}, :excludes #{}, :name thesis.background.core, :imports {Uri goog.Uri}, :requires {chromex.ext.runtime chromex.ext.runtime, Uri goog.Uri, chromex.protocols chromex.protocols, gstring goog.string, location thesis.background.location, chromex.ext.web-request chromex.ext.web-request, chromex.chrome-event-channel chromex.chrome-event-channel, goog.string goog.string, chromex.ext.browser-action chromex.ext.browser-action, ext chromex.ext.extension, web-request chromex.ext.web-request, chromex.support chromex.support, chromex.logging chromex.logging, browser-action chromex.ext.browser-action, tabs chromex.ext.tabs, cljs.core.async cljs.core.async, goog.string.format goog.string.format, thesis.background.location thesis.background.location, chromex.ext.extension chromex.ext.extension, chromex.ext.tabs chromex.ext.tabs, t-storage thesis.background.storage, runtime chromex.ext.runtime, chromex.ext.storage chromex.ext.storage, thesis.background.storage thesis.background.storage, storage chromex.ext.storage}, :uses {get-domain-count thesis.background.storage, <! cljs.core.async, process-request! thesis.background.storage, close! cljs.core.async, chan cljs.core.async, get-sender chromex.protocols, setup-storage! thesis.background.storage, get-and-store-psl! thesis.background.storage, make-chrome-event-channel chromex.chrome-event-channel, post-message! chromex.protocols}, :defs {process-chrome-event {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 134, :column 7, :end-line 134, :end-column 27, :arglists (quote ([event-num event]))}, :name thesis.background.core/process-chrome-event, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 27, :method-params ([event-num event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event-num event]))}, add-client! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 36, :column 7, :end-line 36, :end-column 18, :arglists (quote ([client]))}, :name thesis.background.core/add-client!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 18, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client]))}, location {:name thesis.background.core/location, :file "src/background/thesis/background/core.cljs", :line 22, :column 1, :end-line 22, :end-column 14, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 22, :column 6, :end-line 22, :end-column 14}}, tell-client-about-request! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 108, :column 7, :end-line 108, :end-column 33, :arglists (quote ([tabId tabUrl r]))}, :name thesis.background.core/tell-client-about-request!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 33, :method-params ([tabId tabUrl r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tabId tabUrl r]))}, initialise-tab {:name thesis.background.core/initialise-tab, :file "src/background/thesis/background/core.cljs", :line 23, :column 1, :end-line 23, :end-column 20, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 23, :column 6, :end-line 23, :end-column 20}}, handle-request {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 111, :column 7, :end-line 111, :end-column 21, :arglists (quote ([request]))}, :name thesis.background.core/handle-request, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 21, :method-params ([request]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([request]))}, init! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 172, :column 7, :end-line 172, :end-column 12, :arglists (quote ([]))}, :name thesis.background.core/init!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, handle-tab-closed {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 127, :column 7, :end-line 127, :end-column 24, :arglists (quote ([tabId]))}, :name thesis.background.core/handle-tab-closed, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 24, :method-params ([tabId]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tabId]))}, tabs {:name thesis.background.core/tabs, :file "src/background/thesis/background/core.cljs", :line 24, :column 1, :end-line 24, :end-column 10, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 24, :column 6, :end-line 24, :end-column 10}}, remove-client! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 41, :column 7, :end-line 41, :end-column 21, :arglists (quote ([client]))}, :name thesis.background.core/remove-client!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 21, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client]))}, message-to-client {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 97, :column 7, :end-line 97, :end-column 24, :arglists (quote ([tabId msg]))}, :name thesis.background.core/message-to-client, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 24, :method-params ([tabId msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tabId msg]))}, clients {:name thesis.background.core/clients, :file "src/background/thesis/background/core.cljs", :line 21, :column 1, :end-line 21, :end-column 13, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 21, :column 6, :end-line 21, :end-column 13}}, run-client-message-loop! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 50, :column 7, :end-line 50, :end-column 31, :arglists (quote ([client]))}, :name thesis.background.core/run-client-message-loop!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 31, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client]))}, boot-chrome-event-loop! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 160, :column 7, :end-line 160, :end-column 30, :arglists (quote ([]))}, :name thesis.background.core/boot-chrome-event-loop!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, handle-tab-created {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 130, :column 7, :end-line 130, :end-column 25, :arglists (quote ([tab]))}, :name thesis.background.core/handle-tab-created, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 25, :method-params ([tab]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tab]))}, tell-client-about-click! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 103, :column 7, :end-line 103, :end-column 31, :arglists (quote ([id url]))}, :name thesis.background.core/tell-client-about-click!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 31, :method-params ([id url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id url]))}, run-chrome-event-loop! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 152, :column 7, :end-line 152, :end-column 29, :arglists (quote ([chrome-event-channel]))}, :name thesis.background.core/run-chrome-event-loop!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 29, :method-params ([chrome-event-channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chrome-event-channel]))}, tell-clients-about-new-tab! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 92, :column 7, :end-line 92, :end-column 34, :arglists (quote ([tab]))}, :name thesis.background.core/tell-clients-about-new-tab!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 34, :method-params ([tab]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tab]))}, handle-client-connection! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 84, :column 7, :end-line 84, :end-column 32, :arglists (quote ([client]))}, :name thesis.background.core/handle-client-connection!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 32, :method-params ([client]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([client]))}, remove-client-by-id! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/core.cljs", :line 30, :column 7, :end-line 30, :end-column 27, :arglists (quote ([tabId]))}, :name thesis.background.core/remove-client-by-id!, :variadic false, :file "src/background/thesis/background/core.cljs", :end-column 27, :method-params ([tabId]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tabId]))}}, :require-macros {chromex.ext.runtime chromex.ext.runtime, cljs.core.async.macros cljs.core.async.macros, chromex.ext.web-request chromex.ext.web-request, chromex.ext.browser-action chromex.ext.browser-action, ext chromex.ext.extension, web-request chromex.ext.web-request, chromex.support chromex.support, chromex.logging chromex.logging, browser-action chromex.ext.browser-action, tabs chromex.ext.tabs, chromex.ext.extension chromex.ext.extension, chromex.ext.tabs chromex.ext.tabs, runtime chromex.ext.runtime, chromex.ext.storage chromex.ext.storage, storage chromex.ext.storage}, :cljs.analyzer/constants {:seen #{:urls :else :recur :type :tabdict :id :url :typ :img}, :order [:recur :typ :url :else :type :id :img :tabdict :urls]}, :doc nil}