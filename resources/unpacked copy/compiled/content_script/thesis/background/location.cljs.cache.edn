;; Analyzed by ClojureScript 1.8.51
{:use-macros {log chromex.logging, go cljs.core.async.macros, group chromex.logging, go-loop cljs.core.async.macros, warn chromex.logging, group-end chromex.logging, info chromex.logging, error chromex.logging}, :excludes #{}, :name thesis.background.location, :imports nil, :requires {gstring goog.string, goog.string goog.string, goog.object goog.object, cljs.core.async cljs.core.async, chromex.protocols chromex.protocols, storage chromex.ext.storage, chromex.ext.storage chromex.ext.storage, chromex.logging chromex.logging}, :uses {set chromex.protocols, timeout cljs.core.async, <! cljs.core.async, chan cljs.core.async, get chromex.protocols, >! cljs.core.async, put! cljs.core.async}, :defs {geo-trigger {:name thesis.background.location/geo-trigger, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/location.cljs", :line 10, :column 1, :end-line 10, :end-column 17, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/location.cljs", :line 10, :column 6, :end-line 10, :end-column 17}}, force-get-location! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/location.cljs", :line 12, :column 7, :end-line 12, :end-column 26, :arglists (quote ([]))}, :name thesis.background.location/force-get-location!, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/location.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, watch-location! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/location.cljs", :line 15, :column 7, :end-line 15, :end-column 22, :arglists (quote ([]))}, :name thesis.background.location/watch-location!, :variadic false, :file "/Users/jacob/Desktop/thesis-cljs/src/background/thesis/background/location.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, storage chromex.ext.storage, chromex.ext.storage chromex.ext.storage, chromex.logging chromex.logging}, :cljs.analyzer/constants {:seen #{:else :acc :recur :it :ts :lon :lat :maximumAge}, :order [:recur :else :maximumAge :lat :lon :acc :it :ts]}, :doc nil}