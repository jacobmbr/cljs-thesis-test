;; Analyzed by ClojureScript 1.8.51
{:name thesis.content-script.handlers, :doc nil, :excludes #{}, :use-macros {log chromex.logging, go cljs.core.async.macros, go-loop cljs.core.async.macros}, :require-macros {cljs.core.async.macros cljs.core.async.macros, r reagent.core, reagent.core reagent.core, storage chromex.ext.storage, chromex.ext.storage chromex.ext.storage, chromex.logging chromex.logging}, :uses {set-value! domina.core, path re-frame.core, destroy! domina.core, by-id domina.core, value domina.core, append! domina.core, debug re-frame.core, trim-v re-frame.core, dispatch re-frame.core, after re-frame.core, by-class domina.core, put! cljs.core.async, register-handler re-frame.core}, :requires {Uri goog.Uri, domina.core domina.core, reagent.core reagent.core, r reagent.core, chromex.logging chromex.logging, cljs.core.async cljs.core.async, st thesis.background.storage, chromex.ext.storage chromex.ext.storage, thesis.background.storage thesis.background.storage, storage chromex.ext.storage, re-frame.core re-frame.core}, :imports {Uri goog.Uri}, :cljs.analyzer/constants {:seen #{:y :align :handle-info :align? :tab-url :exit :font-size :dim :img-data :kill :has-info? :domain-counts :img-pos :img-scale :cnt :resize :update-img-pos :handle-click :data-satellites :show-text :msg-chan :left-padding :min-count :count :handle-counts :show-text? :scale-down-img :get-counts :x :max-count :domain :typ :initialise-db :data}, :order [:initialise-db :count :cnt :align? :tab-url :dim :img-data :has-info? :domain-counts :img-pos :img-scale :msg-chan :left-padding :min-count :show-text? :max-count :data :scale-down-img :kill :exit :update-img-pos :resize :handle-info :show-text :align :font-size :x :y :handle-counts :get-counts :data-satellites :handle-click :typ :domain]}}