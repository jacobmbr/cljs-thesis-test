;; Analyzed by ClojureScript 1.8.51
{:use-macros {log chromex.logging, reaction reagent.ratom, html hiccups.core, go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name thesis.map.gui, :imports nil, :requires {idx cljs-idxdb.core, domina.core domina.core, gs goog.string, goog.string goog.string, thesis.map.handlers thesis.map.handlers, reagent.core reagent.core, r reagent.core, chromex.logging chromex.logging, cljs.core.async cljs.core.async, thesis.map.subs thesis.map.subs, domina.events domina.events, cljs-idxdb.core cljs-idxdb.core, evt domina.events, anim thesis.content-script.animation, clojure.string clojure.string, thesis.content-script.animation thesis.content-script.animation, re-frame.core re-frame.core}, :uses {timeout cljs.core.async, subscribe re-frame.core, set-value! domina.core, destroy! domina.core, by-id domina.core, dispatch-sync re-frame.core, value domina.core, append! domina.core, dispatch re-frame.core, split clojure.string, by-class domina.core, put! cljs.core.async}, :defs {site-infobox {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 109, :column 7, :end-line 109, :end-column 19, :arglists (quote ([]))}, :name thesis.map.gui/site-infobox, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, display-history {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 42, :column 7, :end-line 42, :end-column 22, :arglists (quote ([]))}, :name thesis.map.gui/display-history, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, history-item {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 18, :column 7, :end-line 18, :end-column 19, :arglists (quote ([text cnt]))}, :name thesis.map.gui/history-item, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 19, :method-params ([text cnt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([text cnt]))}, init! {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 224, :column 7, :end-line 224, :end-column 12, :arglists (quote ([]))}, :name thesis.map.gui/init!, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, infobox {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 126, :column 7, :end-line 126, :end-column 14, :arglists (quote ([]))}, :name thesis.map.gui/infobox, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, domain-infobox {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 93, :column 7, :end-line 93, :end-column 21, :arglists (quote ([]))}, :name thesis.map.gui/domain-infobox, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, show-state {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 151, :column 7, :end-line 151, :end-column 17, :arglists (quote ([]))}, :name thesis.map.gui/show-state, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mapbox {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 160, :column 7, :end-line 160, :end-column 13, :arglists (quote ([]))}, :name thesis.map.gui/mapbox, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, display-locations {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 67, :column 7, :end-line 67, :end-column 24, :arglists (quote ([]))}, :name thesis.map.gui/display-locations, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, display-domains {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 75, :column 7, :end-line 75, :end-column 22, :arglists (quote ([]))}, :name thesis.map.gui/display-domains, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, root {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/src/map/thesis/map/gui.cljs", :line 215, :column 7, :end-line 215, :end-column 11, :arglists (quote ([]))}, :name thesis.map.gui/root, :variadic false, :file "src/map/thesis/map/gui.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent.ratom reagent.ratom, cljs.core.async.macros cljs.core.async.macros, hiccups hiccups.core, hiccups.core hiccups.core, r reagent.core, reagent.core reagent.core, chromex.logging chromex.logging}, :cljs.analyzer/constants {:seen #{:zoom :domain-info :color :show-site-info :pre :key :site-info :else :font-size :transition :speed :top :font-weight :show-domain :overflow :geojson :show-state? :component-did-mount :background-color :width :background :bearing :distinct-locations :view-mode :component-did-update :history :mouse :get-domain-info :recur :display-info-box? :state :distinct-domains :window :border-left :on-click :center :loading-domains? :style :div :reagent-render :loading-site-info? :display-info-box :id :class :padding :lon :container :loading-domain-info? :lat :display-name :text-decoration :display :position :loading-locations? :h2 :domain :h1 :zooom :my-location :overflow-y :loading-location-counts? :p :margin-bottom :test :initialise-db :href :a :height :left :span :margin :data}, :order [:mouse :window :component-did-update :display-name :reagent-render :div :class :style :font-weight :margin-bottom :span :on-click :show-site-info :font-size :history :distinct-domains :width :height :position :left :top :overflow-y :background-color :overflow :border-left :margin :a :href :show-domain :text-decoration :key :distinct-locations :loading-locations? :h1 :loading-domains? :background :padding :get-domain-info :color :p :domain-info :domain :data :loading-domain-info? :h2 :pre :site-info :loading-site-info? :view-mode :display-info-box? :display-info-box :transition :state :show-state? :display :geojson :loading-location-counts? :my-location :component-did-mount :container :zooom :center :test :zoom :bearing :speed :lon :lat :recur :else :id :initialise-db]}, :doc nil}