;; Analyzed by ClojureScript 1.8.51
{:use-macros {get-hook chromex.support, call-hook chromex.support, oget chromex.support, ocall chromex.support}, :excludes #{}, :name chromex.chrome-port, :imports nil, :requires {chromex.support chromex.support, protocols chromex.protocols, chromex.protocols chromex.protocols, core-async cljs.core.async.impl.protocols, cljs.core.async.impl.protocols cljs.core.async.impl.protocols, cljs.core.async cljs.core.async}, :uses {chan cljs.core.async, IChromePortState chromex.protocols, IChromePort chromex.protocols, put! cljs.core.async}, :defs {ChromePort {:num-fields 4, :protocols #{chromex.protocols/IChromePort cljs.core.async.impl.protocols/Channel cljs.core.async.impl.protocols/ReadPort chromex.protocols/IChromePortState}, :name chromex.chrome-port/ChromePort, :file "resources/unpacked/compiled/content_script/chromex/chrome_port.cljs", :end-column 20, :type true, :column 10, :line 10, :record false, :end-line 10, :skip-protocol-flag nil}, ->ChromePort {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/resources/unpacked/compiled/content_script/chromex/chrome_port.cljs", :line 10, :column 10, :end-line 10, :end-column 20, :protocols #{chromex.protocols/IChromePort cljs.core.async.impl.protocols/Channel cljs.core.async.impl.protocols/ReadPort chromex.protocols/IChromePortState}, :skip-protocol-flag nil, :factory :positional, :arglists (quote ([config native-chrome-port channel connected?]))}, :protocols #{chromex.protocols/IChromePort cljs.core.async.impl.protocols/Channel cljs.core.async.impl.protocols/ReadPort chromex.protocols/IChromePortState}, :name chromex.chrome-port/->ChromePort, :variadic false, :file "resources/unpacked/compiled/content_script/chromex/chrome_port.cljs", :end-column 20, :method-params ([config native-chrome-port channel connected?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 10, :end-line 10, :max-fixed-arity 4, :fn-var true, :arglists (quote ([config native-chrome-port channel connected?])), :skip-protocol-flag nil}, make-chrome-port {:protocol-inline nil, :meta {:file "/Users/jacob/Desktop/thesis-cljs/resources/unpacked/compiled/content_script/chromex/chrome_port.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([config native-chrome-port]))}, :name chromex.chrome-port/make-chrome-port, :variadic false, :file "resources/unpacked/compiled/content_script/chromex/chrome_port.cljs", :end-column 23, :method-params ([config native-chrome-port]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([config native-chrome-port]))}}, :require-macros {chromex.support chromex.support}, :cljs.analyzer/constants {:seen #{:chrome-port-post-message-called-on-disconnected-port native-chrome-port :chrome-port-put-message-called-on-disconnected-port :chrome-port-on-disconnect-called-on-disconnected-port :chrome-port-post-message-called-with-nil :chrome-port-channel-factory connected? :chrome-port-on-message-called-on-disconnected-port :chrome-port-on-message-fn-factory config :chrome-port-disconnect-called-on-disconnected-port channel :mutable :chrome-port-on-disconnect-fn-factory}, :order [:chrome-port-post-message-called-with-nil :chrome-port-post-message-called-on-disconnected-port :chrome-port-disconnect-called-on-disconnected-port :chrome-port-on-disconnect-called-on-disconnected-port :chrome-port-on-message-called-on-disconnected-port :chrome-port-put-message-called-on-disconnected-port config native-chrome-port channel connected? :mutable :chrome-port-channel-factory :chrome-port-on-message-fn-factory :chrome-port-on-disconnect-fn-factory]}, :doc nil}